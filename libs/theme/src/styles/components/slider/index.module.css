/*
Copyright 2021 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/

/* @import "../commons/index.css"; */

:root {
  --wa-slider-controls-margin: calc(var(--wa-slider-handle-width) / 2);
  --wa-slider-track-margin-offset: calc(var(--wa-slider-controls-margin) * -1);

  --wa-slider-handle-margin-top: calc(var(--wa-slider-handle-width) / -2);
  --wa-slider-handle-margin-left: calc(var(--wa-slider-handle-width) / -2);

  --wa-dial-width: var(--wa-slider-height);
  --wa-dial-label-gap-y: var(--wa-global-dimension-size-65);
  --wa-dial-handle-position: var(--wa-global-dimension-size-100);

  --wa-slider-track-handleoffset: calc(var(--wa-slider-handle-gap));
  --wa-slider-track-middle-handleoffset: calc(
    var(--wa-slider-handle-gap) + calc(var(--wa-slider-handle-width) / 2)
  );

  --wa-slider-input-top: calc(var(--wa-slider-handle-margin-top) / 4);
  --wa-slider-input-left: calc(var(--wa-slider-handle-margin-left) / 4);

  --wa-dial-handle-size: 100%;
  --wa-dial-min-height: 0;
  --wa-dial-controls-min-height: 0;
  --wa-dial-controls-margin: 0;

  --wa-slider-color-min-height: auto;
  --wa-slider-color-track-padding: 0;
  --wa-slider-color-track-top: 0;
  --wa-slider-color-track-margin-top: 0;
  --wa-slider-color-track-margin-left: 0;
  --wa-slider-color-track-margin-right: 0;
  --wa-slider-color-handle-top: 50%;

  --wa-slider-ramp-margin-top: 0;

  --wa-slider-range-track-reset: 0;
}

.wa-Slider {
  position: relative;

  /* Don't let z-index'd child elements float above other things on the page */
  z-index: 1;
  display: block;

  user-select: none;
  touch-action: none;

  width: var(--wa-global-dimension-size-2400);
  min-inline-size: var(--wa-slider-min-width);
  flex-shrink: 0;

  &.wa-Slider--positionTop {
    display: inline-flex;
    flex-direction: column;
    width: var(--wa-component-single-line-width);

    .wa-Slider-controls {
      /* If the user overrides the width of the field, propagate to the inner component */
      width: calc(100% - calc(var(--wa-slider-controls-margin)) * 2);
    }
  }

  /* The side label variant of Field is inline, and fills as much space as needed
   * by default. If an explicit width is set, then the field flexes to fill available space. */
  &.wa-Slider--positionSide {
    display: inline-flex;
    align-items: center;
    width: auto;

    .wa-Slider-controls {
      flex: 1;
      width: var(--wa-component-single-line-width);
    }

    .wa-Slider-labelContainer {
      margin-inline-end: calc(var(--wa-slider-label-gap-x) / 2);
    }

    .wa-Slider-valueLabelContainer {
      margin-inline-start: calc(var(--wa-slider-label-gap-x) / 2);
    }

    .wa-Slider-value {
      text-align: start;
    }
  }
}

.wa-Slider-controls {
  display: inline-block;
  box-sizing: border-box;

  position: relative;
  z-index: auto;

  min-block-size: var(--wa-slider-height);

  /* These calculations prevent the track from spilling outside of the control */
  inline-size: calc(100% - calc(var(--wa-slider-controls-margin)));
  margin-inline-start: var(--wa-slider-controls-margin);
  min-block-size: var(--wa-slider-height);

  vertical-align: top;
}

.wa-Slider-track,
.wa-Slider-buffer,
.wa-Slider-ramp,
.wa-Slider-fill {
  block-size: var(--wa-slider-track-height);
  box-sizing: border-box;

  position: absolute;
  z-index: 1;
  inset-block-start: calc(var(--wa-slider-height) / 2);
  inset-inline-start: 0;
  inset-inline-end: auto;

  margin-block-start: calc(var(--wa-slider-fill-track-height) / -2);

  pointer-events: none;
}

.wa-Slider-track,
.wa-Slider-buffer,
.wa-Slider-fill {
  padding-block: 0;
  padding-inline: 0 var(--wa-slider-track-handleoffset);
  margin-inline-start: var(--wa-slider-track-margin-offset);

  &::before {
    content: "";
    display: block;
    block-size: 100%;

    border-radius: var(--wa-slider-track-border-radius);
  }
}

.wa-Slider-fill {
  margin-inline-start: 0;
  padding-block: 0;
  padding-inline: calc(
      var(--wa-slider-controls-margin) + var(--wa-slider-track-handleoffset)
    )
    0;
}

.wa-Slider-fill--right {
  padding-block: 0;
  padding-inline: 0
    calc(var(--wa-slider-controls-margin) + var(--wa-slider-track-handleoffset));
}

.wa-Slider-buffer {
  padding-block: 0;
  padding-inline: 0 var(--wa-slider-track-handleoffset);
}

.wa-Slider-track ~ .wa-Slider-track,
.wa-Slider-buffer ~ .wa-Slider-buffer {
  inset-inline-start: auto;
  inset-inline-end: var(--wa-slider-range-track-reset);
  padding-block: 0;
  padding-inline: var(--wa-slider-track-handleoffset) 0;
  margin-inline-start: var(--wa-slider-range-track-reset);
  margin-inline-end: var(--wa-slider-track-margin-offset);
}

.wa-Slider-buffer ~ .wa-Slider-buffer {
  margin-inline-end: var(--wa-slider-range-track-reset);
  padding-block: 0;
  padding-inline: var(--wa-slider-track-middle-handleoffset) 0;

  &:after {
    display: none;
  }
}

.wa-Slider--range {
  .wa-Slider-track {
    &:first-of-type {
      padding-block: 0;
      padding-inline: 0 var(--wa-slider-track-handleoffset);
      inset-inline-start: var(--wa-slider-range-track-reset);
      inset-inline-end: auto;
      margin-inline-start: var(--wa-slider-track-margin-offset);
    }

    /* Force specificity otherwise the ~ rules above override */
    &:dir(ltr),
    &:dir(rtl) {
      padding-block: 0;
      padding-inline: var(--wa-slider-track-middle-handleoffset)
        var(--wa-slider-track-middle-handleoffset);
      inset-inline-start: auto;
      inset-inline-end: auto;
      margin-inline: var(--wa-slider-range-track-reset);
      margin-block: var(--wa-slider-range-track-reset);
    }
    &:last-of-type {
      padding-block: 0;
      padding-inline: var(--wa-slider-track-handleoffset) 0;
      inset-inline-start: auto;
      inset-inline-end: var(--wa-slider-range-track-reset);
      margin-inline-end: var(--wa-slider-track-margin-offset);
    }
  }
}

.wa-Slider-buffer {
  /* Appear above track */
  z-index: 2;
}

.wa-Slider-ramp {
  margin-block-start: var(--wa-slider-ramp-margin-top);
  block-size: var(--wa-slider-ramp-track-height);

  position: absolute;
  inset-inline-start: var(--wa-slider-track-margin-offset);
  inset-inline-end: var(--wa-slider-track-margin-offset);
  inset-block-start: calc(var(--wa-slider-ramp-track-height) / 2);

  svg {
    inline-size: 100%;
    block-size: 100%;

    /* Flip the ramp automatically for RTL */
    transform: logical rotate(0deg);
  }
}

.wa-Slider-handle {
  position: absolute;
  inset-inline-start: 0;
  inset-block-start: calc(var(--wa-slider-height) / 2);
  z-index: 2;

  display: inline-block;
  box-sizing: border-box;

  inline-size: var(--wa-slider-handle-width);
  block-size: var(--wa-slider-handle-height);

  margin-block: var(--wa-slider-handle-margin-top) 0;
  margin-inline: calc(var(--wa-slider-handle-width) / -2) 0;

  border-width: var(--wa-slider-handle-border-size);
  border-style: solid;

  border-radius: var(--wa-slider-handle-border-radius);

  transition: border-width var(--wa-slider-animation-duration) ease-in-out;

  outline: none;
  /* cursor: pointer; */
  /* cursor: grab; */

  &:active,
  &.is-dragged {
    border-width: var(--wa-slider-handle-border-size-down);
    /* cursor: ns-resize; */
    /* cursor: grabbing; */
  }

  &:active,
  $.is-dragged {
  }

  &:active,
  &.is-focused,
  &.is-dragged,
  &.is-tophandle {
    z-index: 3;
  }

  &:before {
    content: " ";
    display: block;
    position: absolute;
    left: 50%;
    top: 50%;

    transition: box-shadow var(--wa-global-animation-duration-100) ease-out,
      width var(--wa-global-animation-duration-100) ease-out,
      height var(--wa-global-animation-duration-100) ease-out;

    width: var(--wa-slider-handle-width);
    height: var(--wa-slider-handle-height);

    transform: translate(-50%, -50%);

    border-radius: 100%;
  }

  &.is-focused {
    &:before {
      width: calc(var(--wa-slider-handle-width) + var(--wa-focus-ring-gap) * 2);
      height: calc(var(--wa-slider-handle-height) + var(--wa-focus-ring-gap) * 2);
    }
  }
}

.wa-Slider-input {
  /*  Remove the margin for input in Firefox and Safari. */
  margin: 0;

  inline-size: var(--wa-slider-handle-width);
  block-size: var(--wa-slider-handle-height);
  padding: 0;
  position: absolute;
  inset-block-start: var(--wa-slider-input-top);
  inset-inline-start: var(--wa-slider-input-left);
  overflow: hidden;
  opacity: 0.000001;
  cursor: default;
  -webkit-appearance: none;
  border: 0;
  pointer-events: none;

  &:focus {
    outline: none;
  }
}

.wa-Slider-labelContainer,
.wa-Slider-valueLabelContainer {
  display: flex;
  position: relative;

  inline-size: auto;

  font-size: var(--wa-text-size-text-label);
  line-height: var(--wa-line-height-text-label);
}

.wa-Slider-label,
.wa-Dial-label {
  padding-inline-start: 0;
  flex-grow: 1;
}

.wa-Slider-value,
.wa-Dial-value {
  flex-grow: 0;
  padding-inline-end: 0;
  cursor: default;
  font-feature-settings: "tnum";
  text-align: end;
}

.wa-Slider-value {
  margin-inline-start: calc(var(--wa-slider-label-gap-x) / 2);
  white-space: nowrap;
}

.wa-Slider-ticks {
  display: flex;
  justify-content: space-between;

  z-index: 0;

  margin: 0 var(--wa-slider-track-margin-offset);
  margin-block-start: calc(
    var(--wa-slider-tick-mark-height) + calc(var(--wa-slider-track-height) / 2)
  );
}

.wa-Slider-tick {
  position: relative;

  inline-size: var(--wa-slider-tick-mark-width);

  &:after {
    display: block;
    position: absolute;
    inset-block-start: 0;
    inset-inline-start: calc(50% - calc(var(--wa-slider-tick-mark-width) / 2));
    content: "";
    inline-size: var(--wa-slider-tick-mark-width);
    block-size: var(--wa-slider-tick-mark-height);

    border-radius: var(--wa-slider-tick-mark-border-radius);
  }

  .wa-Slider-tickLabel {
    display: flex;
    align-items: center;
    justify-content: center;

    margin-block: var(--wa-slider-label-gap-x) 0;
    margin-inline: calc(var(--wa-slider-label-gap-x) * -1)
      calc(var(--wa-slider-label-gap-x) * -1);

    font-size: var(--wa-text-size-text-label);
    line-height: var(--wa-line-height-text-label);
  }

  &:first-of-type,
  &:last-of-type {
    .wa-Slider-tickLabel {
      display: block;
      position: absolute;
      margin-block: var(--wa-slider-label-gap-x) 0;
      margin-inline: 0;
    }
  }

  &:first-of-type {
    .wa-Slider-tickLabel {
      inset-inline-start: 0;
    }
  }

  &:last-of-type {
    .wa-Slider-tickLabel {
      inset-inline-end: 0;
    }
  }
}

.wa-Slider--color {
  .wa-Slider-labelContainer {
    padding-block-end: var(--wa-fieldlabel-padding-bottom);
  }
  .wa-Slider-controls,
  .wa-Slider-controls::before,
  .wa-Slider-track {
    min-block-size: var(--wa-slider-color-min-height);
    block-size: var(--wa-slider-color-track-height);
    margin-inline-start: var(--wa-slider-color-track-margin-left);
    inline-size: 100%;
  }
  .wa-Slider-controls::before {
    display: block;
    content: "";
  }
  .wa-Slider-controls::before,
  .wa-Slider-track {
    inset-block-start: var(--wa-slider-color-track-top);
    padding: var(--wa-slider-color-track-padding);
    margin-block-start: var(--wa-slider-color-track-margin-top);
    margin-inline-end: var(--wa-slider-color-track-margin-right);
    border-radius: var(--wa-border-radius-regular);
  }
  .wa-Slider-handle {
    inset-block-start: var(--wa-slider-color-handle-top);
  }
}

.wa-Dial {
  @inherit: .wa-Slider;
  display: inline-flex;
  flex-direction: column;

  block-size: auto;
  min-inline-size: var(--wa-dial-min-height);
  min-block-size: var(--wa-dial-min-height);
  inline-size: var(--wa-dial-container-width);
}

.wa-Dial-labelContainer {
  @inherit: .wa-Slider-labelContainer;
  margin-block-end: var(--wa-dial-label-gap-y);
}

.wa-Dial-label {
  &:only-child {
    /* Only center if we don't have a value */
    text-align: center;
  }
}

.wa-Dial-controls {
  @inherit: .wa-Slider-controls;
  inline-size: var(--wa-dial-width);
  block-size: var(--wa-dial-width);
  min-block-size: var(--wa-dial-controls-min-height);

  border-radius: var(--wa-dial-border-radius);
  position: relative;
  display: inline-block;
  margin: var(--wa-dial-controls-margin);

  box-sizing: border-box;
  outline: none;

  &::before,
  &::after {
    content: "";
    inline-size: calc(var(--wa-slider-tick-mark-width) * 2);
    block-size: var(--wa-slider-tick-mark-width);
    border-radius: var(--wa-slider-tick-mark-border-radius);
    position: absolute;
    inset-block-end: 0;
  }
  &::before {
    inset-inline-start: auto;
    inset-inline-end: calc(var(--wa-slider-tick-mark-width) * -1);
    transform: rotate(var(--wa-dial-min-max-tick-angles));
  }
  &::after {
    inset-inline-start: calc(var(--wa-slider-tick-mark-width) * -1);
    transform: rotate(calc(-1 * var(--wa-dial-min-max-tick-angles)));
  }
}

.wa-Dial-handle {
  @inherit: .wa-Slider-handle;
  inline-size: var(--wa-dial-handle-size);
  block-size: var(--wa-dial-handle-size);
  border-width: var(--wa-slider-handle-border-size);
  box-shadow: none;
  position: absolute;
  inset-block-start: var(--wa-dial-handle-position);
  inset-inline-start: var(--wa-dial-handle-position);
  inset-inline-end: var(--wa-dial-handle-position);
  inset-block-end: var(--wa-dial-handle-position);
  border-radius: var(--wa-dial-border-radius);
  transform: rotate(calc(-1 * var(--wa-dial-min-max-tick-angles)));
  cursor: pointer;
  cursor: grab;

  transition: background-color var(--wa-slider-animation-duration) ease-in-out;

  &::after {
    content: "";
    position: absolute;
    inset-block-start: 50%;
    inset-inline-start: calc(var(--wa-slider-tick-mark-width) * -1);
    inline-size: var(--wa-dial-handle-marker-width);
    block-size: var(--wa-dial-handle-marker-height);
    border-radius: var(--wa-dial-handle-marker-border-radius);
    transform: translateY(-50%);
    transition: background-color var(--wa-slider-animation-duration) ease-in-out;
  }

  &:active,
  &.is-focused,
  &.is-dragged {
    border-width: var(--wa-slider-handle-border-size);
    cursor: ns-resize;
    cursor: grabbing;
  }
}

.wa-Dial-input {
  @inherit: .wa-Slider-input;
  inline-size: var(--wa-dial-handle-size);
  block-size: var(--wa-dial-handle-size);
  inset-inline-start: 0;
  inset-block-start: 0;
}

.wa-Dial--small {
  .wa-Dial-controls {
    inline-size: var(--wa-dial-small-width);
    block-size: var(--wa-dial-small-height);
  }
}

.wa-Slider,
.wa-Dial {
  &.is-disabled {
    cursor: default;

    .wa-Slider-handle {
      cursor: default;
      pointer-events: none;
    }

    &.wa-Slider--color {
      .wa-Slider-handle {
        &:hover,
        &:active {
          border-width: var(--wa-slider-color-handle-outset-border-size);
        }
      }
    }
  }
}

.u-isGrabbing {
  cursor: ns-resize;
  cursor: -webkit-grabbing;
  cursor: grabbing;

  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;

  .wa-Dial {
    .wa-Dial-label,
    .wa-Dial-value {
      cursor: inherit;
    }
  }

  .wa-Slider {
    .wa-Slider-label,
    .wa-Slider-value {
      cursor: inherit;
    }
  }
}

.wa-Slider-controls {
  &::before,
  &::after {
    content: "";
    display: block;
    inline-size: var(--wa-slider-controls-margin);
    position: absolute;
    block-size: 100%;
  }
  &::before {
    inset-inline-start: calc(var(--wa-slider-controls-margin) * -1);
  }
  &::after {
    inset-inline-end: calc(var(--wa-slider-controls-margin) * -1);
  }
}
